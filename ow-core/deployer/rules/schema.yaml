[Metric]

# [REQUIRED] A name for the metric filter.
filterName="string"

# [REQUIRED] A filter pattern for extracting metric data out of ingested log events.
filterPattern="string"

# [REQUIRED] The name of the log group.
logGroupName="string"

# [REQUIRED] A collection of information that defines how metric data gets emitted.
metricTransformations=[
	# [REQUIRED] The name of the CloudWatch metric.
	metricName="string"

	# [REQUIRED] A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar.
	metricNamespace="string"

	# [REQUIRED] The value to publish to the CloudWatch metric when a filter pattern matches a log event.
	metricValue="string"
	
	# [OPTIONAL] The value to emit when a filter pattern does not match a log event. This value can be null.
	defaultValue="float"

	# [OPTIONAL] The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.
    dimensions={
		"string":"string"
			   }
	# [OPTIONAL] The unit to assign to the metric. If you omit this, the unit is set as None.
	unit='Seconds'|'Microseconds'|'Milliseconds'|'Bytes'|'Kilobytes'|'Megabytes'|'Gigabytes'|'Terabytes'|'Bits'|'Kilobits'|'Megabits'|'Gigabits'|'Terabits'|'Percent'|'Count'|'Bytes/Second'|'Kilobytes/Second'|'Megabytes/Second'|'Gigabytes/Second'|'Terabytes/Second'|'Bits/Second'|'Kilobits/Second'|'Megabits/Second'|'Gigabits/Second'|'Terabits/Second'|'Count/Second'|'None'

	]

[Alarm]

# [REQUIRED] The name for the alarm. This name must be unique within the Region.
AlarmName='string'

# [OPTIONAL] The description for the alarm.
AlarmDescription='string'

# [OPTIONAL] Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
ActionsEnabled=True|False

# [OPTIONAL]
# The actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
#
# Valid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot 
#	| ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name ``
#
# Valid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 
#	| arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0
OKActions=[
    'string',
]

# [OPTIONAL]
# The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
#
# Valid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot 
#	| ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name `` 
#	| ``arn:aws:ssm:region :account-id :opsitem:severity `` | ``arn:aws:ssm-incidents::account-id :response-plan:response-plan-name ``
#
# Valid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 
#	| arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0
AlarmActions=[
    'string',
]

# [OPTIONAL] The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
InsufficientDataActions=[
    'string',
]

# [OPTIONAL] The name for the metric associated with the alarm. For each PutMetricAlarm operation, you must specify either MetricName or a Metrics array.
# If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the Dimensions , Period , Namespace , Statistic , or ExtendedStatistic parameters.
# Instead, you specify all this information in the Metrics array.
MetricName='string'

# [OPTIONAL] The namespace for the metric associated specified in MetricName.
Namespace='string'

# [OPTIONAL] The statistic for the metric specified in MetricName , other than percentile. For percentile statistics, use ExtendedStatistic.
# When you call PutMetricAlarm and specify a MetricName , you must specify either Statistic or ExtendedStatistic, but not both.
Statistic='SampleCount'|'Average'|'Sum'|'Minimum'|'Maximum'

# [OPTIONAL] The percentile statistic for the metric specified in MetricName . Specify a value between p0.0 and p100.
ExtendedStatistic='string'

# [OPTIONAL] The dimensions for the metric specified in MetricName.
Dimensions=[
    {
		# [REQUIRED] The name of the dimension. Dimension names must contain only ASCII characters and must include at least one non-whitespace character.
        'Name': 'string',
		# [REQUIRED] The value of the dimension. Dimension values must contain only ASCII characters and must include at least one non-whitespace character.
        'Value': 'string'
    },
]

# [OPTIONAL] The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60.
Period=123

# [OPTIONAL] The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces.
Unit='Seconds'|'Microseconds'|'Milliseconds'|'Bytes'|'Kilobytes'|'Megabytes'|'Gigabytes'|'Terabytes'|'Bits'|'Kilobits'|'Megabits'|'Gigabits'|'Terabits'|'Percent'|'Count'|'Bytes/Second'|'Kilobytes/Second'|'Megabytes/Second'|'Gigabytes/Second'|'Terabytes/Second'|'Bits/Second'|'Kilobits/Second'|'Megabits/Second'|'Gigabits/Second'|'Terabits/Second'|'Count/Second'|'None'

# [REQUIRED] The number of periods over which data is compared to the specified threshold. 
# If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.
EvaluationPeriods=123

# [OPTIONAL] The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M.
DatapointsToAlarm=123

# [OPTIONAL] The value against which the specified statistic is compared.
# This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
Threshold=123.0

# [REQUIRED] The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
ComparisonOperator='GreaterThanOrEqualToThreshold'|'GreaterThanThreshold'|'LessThanThreshold'|'LessThanOrEqualToThreshold'|'LessThanLowerOrGreaterThanUpperThreshold'|'LessThanLowerThreshold'|'GreaterThanUpperThreshold'

# [OPTIONAL] Sets how this alarm is to handle missing data points. If TreatMissingData is omitted, the default behavior of missing is used.
TreatMissingData='string'

# [OPTIONAL] Used only for alarms based on percentiles. If you specify ignore , the alarm state does not change during periods with too few data points to be statistically significant.
#If you specify evaluate or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available.
EvaluateLowSampleCountPercentile='string'

# [OPTIONAL]
Metrics=[
    {
        'Id': 'string',
        'MetricStat': {
            'Metric': {
                'Namespace': 'string',
                'MetricName': 'string',
                'Dimensions': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'Period': 123,
            'Stat': 'string',
            'Unit': 'Seconds'|'Microseconds'|'Milliseconds'|'Bytes'|'Kilobytes'|'Megabytes'|'Gigabytes'|'Terabytes'|'Bits'|'Kilobits'|'Megabits'|'Gigabits'|'Terabits'|'Percent'|'Count'|'Bytes/Second'|'Kilobytes/Second'|'Megabytes/Second'|'Gigabytes/Second'|'Terabytes/Second'|'Bits/Second'|'Kilobits/Second'|'Megabits/Second'|'Gigabits/Second'|'Terabits/Second'|'Count/Second'|'None'
        },
        'Expression': 'string',
        'Label': 'string',
        'ReturnData': True|False,
        'Period': 123,
        'AccountId': 'string'
    },
]

# [OPTIONAL] A list of key-value pairs to associate with the metric stream. You can associate as many as 50 tags with a metric stream.
# Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.
Tags=[
    {
        'Key': 'string',
        'Value': 'string'
    },
]

# [OPTIONAL] If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.
ThresholdMetricId='string'
